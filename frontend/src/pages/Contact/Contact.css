@import url('../../assets/styles/styles.css');

.contact {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  gap: 24px;
  align-items: center;
  justify-content: center;
}

.contact-title {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.contact-title > h2 {
  margin-top: 40px;
  font-style: normal;
  font-weight: 500;
  font-size: 16px;
  line-height: 20px;
  letter-spacing: 3px;
  text-transform: uppercase;
  color: var(--text-color);
}

.contact-title > h3 {
  max-width: 767px;
  font-style: normal;
  font-weight: 700;
  font-size: 48px;
  line-height: 64px;
  letter-spacing: -2px;
  color: var(--color-primary);
}

.contact-title > p {
  max-width: 768px;
  text-align: center;
  font-style: normal;
  font-weight: 400;
  font-size: 16px;
  line-height: 28px;
  color: var(--text-color);
}

.contact-info {
  display: flex;
  max-width: 768px;
  background-color: var(--color-primary);
  justify-content: center;
  gap: 40px;
}

.left-container {
  margin-left: 62px;
  margin-top: 40px;
  margin-bottom: 40px;
}

.right-container {
  margin-right: 62px;
  margin-top: 40px;
  margin-bottom: 40px;
}

.contact-title {
  border-bottom: 1px solid var(--color-white);
}

.container-title,
.container-footer {
  padding-bottom: 12px;
  font-weight: 400;
  font-size: 14px;
  line-height: 20px;
  color: var(--color-white);
  opacity: 0.6;
}

.container-details {
  margin-top: 16px;
  font-style: normal;
  font-weight: 700;
  font-size: 20px;
  line-height: 32px;
  color: var(--color-white);
}

/*** FORM ***/

.visually-hidden:not(:focus):not(:active) {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  white-space: nowrap;
}

/* Basic form
    ============================= */
form {
  display: flex;
  flex-direction: column;
  justify-content: start;
  margin: 0;
}

fieldset {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  border: 0;
  padding: 0 0 2rem;
}

label {
  color: var(--text-color);
  cursor: pointer;
  display: block;
  white-space: nowrap;
  font-size: 18px;
  padding: 0 0 0.5rem;
}

input[type='text'],
input[type='email'],
textarea {
  position: relative;
  width: 80%;
  padding: 1.2rem;
  line-height: 1;
  border: 0.1rem solid var(--color-black);
  background-color: var(--color-white);
  box-shadow: none;
  outline: 0;
}

input[type='text'],
input[type='email'] {
  padding-right: 3rem;
}

input[type='text']:focus,
input[type='email']:focus,
textarea:focus {
  border: 0.1rem solid var(--color-grey);
  background-color: var(--color-light-grey);
}

::placeholder {
  font-style: italic;
  font-size: 16px;
}

/* Form group
============================= */

.form-group {
  padding: 1rem;
  margin: 0;
  background-color: var(--color-white);
}

/* Form field
============================= */

.form-field-container {
  position: relative;
}

.form-field-icon {
  font-style: normal;
}

/* Form help
============================= */

.form-group .form-help {
  margin: 0;
  line-height: 1.3;
  letter-spacing: 0.019rem;
  color: var(--color-dark-grey);
  font-size: 16px;
  max-height: 0;
  transition: 0.3s;
  overflow: hidden;
}

.form-group:focus-within .form-help {
  max-height: 20rem;
  margin: 0.4rem 0 0;
}

/* Form error handling
============================= */

/* The following code is used to place the icon in the after pseudo element. Because after and before are not possible in an input, we need to use a span that will be positioned on the right of our input. 
*/
input:not(:placeholder-shown) ~ .form-field-icon::after {
  height: 100%;
  right: 0;
  pointer-events: none;
  position: absolute;
  top: 0;
  width: 1.3em;
}

/* Because inputs are invalid by default, we need to be careful and show the icon when we are not in focus and when when the input is not empty (placeholder-shown). Careful with this one because it is not supported everywhere. */

input:required:invalid:not(:focus):not(:placeholder-shown)
  ~ .form-field-icon::after {
  content: '✘';
  color: var(--color-error);
}

input:required:valid ~ .form-field-icon::after {
  content: '✔';
  color: var(--color-success);
}

/* We want to hide the helper text when we are not in focus. The tilte allows us to select a sibling element in CSS */

input:required:valid ~ .form-help {
  max-height: 0;
}

/* Showing a border in a different color is good but not enough. For accessibility purposes, we added an icon when the input is valid or invalid to have a visual distinction that is not only color based.*/

input:required:invalid:not(:focus):not(:placeholder-shown),
textarea:invalid:not(:focus):not(:placeholder-shown) {
  border: 0.1rem solid var(--color-error);
}

input:required:valid:not(:placeholder-shown),
textarea:valid:not(:placeholder-shown) {
  border: 0.1rem solid var(--color-success);
}

@media (max-width: 500px) {
  .contact-info {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
  .left-container {
    margin: 24px;
  }
}

@media (max-width: 425px) {
  .contact-title > h3 {
    font-size: 36px;
    line-height: 40px;
    letter-spacing: -2px;
    color: var(--color-primary);
  }
}
